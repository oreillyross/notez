import { type NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { api } from "../utils/api";
import {
  useReactTable,
  createColumnHelper,
  getCoreRowModel,
  flexRender,
} from "@tanstack/react-table";
import Link from "next/link";

type Note = {
  id: string;
  title: string;
};

const Home: NextPage = () => {
  const columnHelper = createColumnHelper<Note>();

  const [data, setData] = useState<Note[]>([{ id: "", title: "" }]);

  const columns = [
    columnHelper.accessor("title", {
      cell: (info) => info.getValue(),
      footer: (props) => props.column.id,
    }),
  ];

  const notes = api.note.getAll.useQuery();

  useEffect(() => {
    if (notes.data) {
      setData(notes.data);
    }
  }, [notes]);

  const table = useReactTable({
    data,
    columns,
    getCoreRowModel: getCoreRowModel(),
  });

  const utils = api.useContext();

  const note = api.note.create.useMutation({
    async onSuccess() {
      await utils.invalidate();
    },
  });

  const [title, setTitle] = useState("");

  function addNote(e: React.KeyboardEvent) {
    if (e.code === "Enter") {
      note.mutate({ title });
      setTitle("");
    }
  }

  return (
    <>
      <Head>
        <title>My Notes app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="mx-auto max-w-7xl py-6 ">
        <nav className="flex justify-between">
          <Link href="/home">Home Icon</Link>

          <div
            className="flex items-center gap-10 text-tertiary">
            <Link href="/search">Search Icon</Link>
            <Link href="/Login"><button className="border p-2 border-primary">Login</button></Link>
          </div>
        </nav>
      </header>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-2 px-4  ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Notes <span className="text-[hsl(280,100%,70%)]">for me</span> App
          </h1>
          <p className="text-2xl text-white"></p>
          <p>
            <input
              className="rounded border p-2 text-2xl"
              placeholder="enter a note..."
              type="text"
              onKeyUp={addNote}
              value={title}
              onChange={(e) => setTitle(e.target.value)}
            />
          </p>
        </div>
        <table className="m-4 text-white">
          <thead className="border border-white">
            {table.getHeaderGroups().map((headerGroup) => (
              <tr key={headerGroup.id}>
                {headerGroup.headers.map((header) => (
                  <td className="p-2" key={header.id}>
                    {header.isPlaceholder
                      ? null
                      : flexRender(
                          header.column.columnDef.header,
                          header.getContext()
                        )}
                  </td>
                ))}
              </tr>
            ))}
          </thead>
          <tbody>
            {table.getRowModel().rows.map((row) => (
              <tr key={row.id}>
                {row.getVisibleCells().map((cell) => (
                  <td key={cell.id}>
                   <Link href={`/note/${cell.id}`}>{flexRender(cell.column.columnDef.cell, cell.getContext())}
</Link>                   </td>
                ))}
              </tr>
            ))}
          </tbody>
          <tfoot>
            <tr>
              <th></th>
            </tr>
          </tfoot>
        </table>
      </main>
    </>
  );
};

export default Home;
